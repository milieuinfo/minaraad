[buildout]
# See which products are not pinned.
extensions = buildout.dumppickedversions

find-links =
    http://dist.plone.org
    http://effbot.org/downloads
    http://pypi.zestsoftware.nl/public/

parts =
    zeoclient
    zeoserver
    munin
    backup
    test
#    maildrop
eggs =
develop =
    src/Products.minaraad
    src/minaraad.projects

allow-picked-versions = false
extends =
    versions.cfg
versions = versions


[conf]
# Ports
zeoclient = 8080
zeoserver = 9080

# Sizes
zodb-cache-size = 8000

# Debugging
debug = on


[plone]
recipe = plone.recipe.plone
zope2-url = http://www.zope.org/Products/Zope/2.10.12/Zope-2.10.12-final.tgz
# unpin these eggs:
eggs =
    plone.session


[zope2]
recipe = plone.recipe.zope2install
url = ${plone:zope2-url}
fake-zope-eggs = true
additional-fake-eggs =
    ZConfig
    ZODB3
    pytz


# Use this section to download additional old-style products.
# List any number of URLs for product tarballs under URLs (separate
# with whitespace, or break over several lines, with subsequent lines
# indented). If any archives contain several products inside a top-level
# directory, list the archive file name (i.e. the last part of the URL,
# normally with a .tar.gz suffix or similar) under 'nested-packages'.
# If any archives extract to a product directory with a version suffix, list
# the archive name under 'version-suffix-packages'.
[productdistros]
recipe = plone.recipe.distros
urls =
    http://plone.org/products/orderablereferencefield/releases/1.1/OrderableReferenceField-1.1.tar.gz
    http://plone.org/products/plone-hotfix/releases/20100612/plonehotfix20100612-1.tar.gz
nested-packages =
version-suffix-packages =


[test]
recipe = collective.recipe.z2testrunner
zope2part = zeoclient
packages =
    Products.minaraad
    minaraad.projects


[zeoclient]
recipe = plone.recipe.zope2instance
zope2-location = ${zope2:location}
zeo-client = true
zeo-address = ${conf:zeoserver}
user = admin:admin
http-address = ${conf:zeoclient}
debug-mode = ${conf:debug}
verbose-security = ${conf:debug}
zserver-threads = 3
zodb-cache-size = ${conf:zodb-cache-size}
environment-vars =
    PTS_LANGUAGES en, nl
    MINARAAD_LOG_PATH ${buildout:directory}/var/log/

eggs =
    ${buildout:eggs}
    ${plone:eggs}
    Products.minaraad
    minaraad.projects
    elementtree
    Products.CacheSetup
    Products.FCKeditor
    Products.PloneHotfix20110720
    Products.Zope_Hotfix_20110622
#    Products.SecureMaildropHost
    Products.SimpleAttachment
    collective.autopermission
    collective.emaillogin
    collective.recaptcha
    jquery.pyproxy
    munin.zope
    archetypes.schemaextender

zcml =
    collective.autopermission
    collective.emaillogin
    collective.recaptcha
    minaraad.projects
    jquery.pyproxy
    munin.zope

products =
    ${productdistros:location}
    ${plone:products}
#    ${maildrop:location}


[instance]
<= zeoclient
zeo-client = false


[zeoserver]
recipe = plone.recipe.zope2zeoserver
zope2-location = ${zope2:location}
zeo-address = 127.0.0.1:${conf:zeoserver}


[backup]
recipe = collective.recipe.backup
location = ~/backups/minaraad
blobbackuplocation = ~/backups/minaraad-blobs


[i18n-overrides]
recipe = collective.recipe.i18noverrides
source = ${buildout:directory}/scripts


[maildrop]
recipe = infrae.maildrophost
smtp_host = mail.zestsoftware.nl
smtp_port = 25
version = 1.22
supervised_daemon = 1


[munin]
# Will be used to monitor the instance.
recipe = zc.recipe.egg
eggs = munin.zope
password = secret
arguments = http_address='${conf:zeoclient}', user='munin:${:password}'
