[buildout]
# See which products are not pinned.
extensions =
    buildout.dumppickedversions
    mr.developer

find-links =
    http://dist.plone.org/release/4.2.4/
    http://dist.plone.org/thirdparty/
    http://pypi.zestsoftware.nl/public/

parts =
    instance
    munin
    test
    varnish-conf
    pcre
    varnish-build
    varnish
    supervisor
#    maildrop
    env
    debugclient
#    lxml
     
eggs =
develop =
    src/Products.minaraad
    src/minaraad.projects

allow-picked-versions = false
show-picked-versions = true

extends =
    zopeapp-versions.cfg
    ztk-versions.cfg
    zope-versions.cfg
    plone-versions.cfg
    versions.cfg
versions = versions
sources = sources

[remotes]
# (Repository locations)
plone = git://github.com/plone
plone_push = git@github.com:plone

[sources]
Products.PortalTransforms = git ${remotes:plone}/Products.PortalTransforms.git pushurl=${remotes:plone_push}/Products.PortalTransforms.git branch=maurits-subprocess

[env]
recipe = gocept.recipe.env
# The recipe reads environment variables. This next empty value is
# only used when the environment variable does not exist, so that
# buildout does not give an error when it wants to use the variable.
HTTP_PROXY =

[conf]
# Ports
instance = 8080
varnish = 12080

# Sizes
varnish-cache-size = 256M
memmonlimit = 1500MB

# Schedules.  Make specific in other cfg files.
restart-time = 30 23 * * 0
pack-time = @weekly
projects-reminder-time = 0 0 * * 2,5

# Debugging
debug = on

# Log for e-mail sending
minaraad-log-path = ${buildout:directory}/var/log

# You should set Proxy Cache Domains manually in the
# portal_cache_settings in the Plone UI and set them up to allow
# purging the varnish cache with the following setting.  You must add
# a semicolon at the end of each line.
varnish_purge_hosts =
    "127.0.0.1";

# IP or hostname that varnish listens on.  Usually, 127.0.0.1 is
# enough, but in Belgium this should include the public interface,
# because the loadbalancer is on a separate machine and varnish should
# accept connections there.  But '*' works for that, at least on
# Linux.  The Mac does not like it.
varnish_host = *


[test]
recipe = zc.recipe.testrunner
eggs =
    ${instance:eggs}
# We may want to fix Products/minaraad/tests/utils.py to not need these packages:
    zope.app.testing
defaults = ['--auto-color', '--auto-progress', '-s', 'Products.minaraad', '-s', 'minaraad.projects']
environment = test_env

[test_env]
PTS_LANGUAGES=nl
zope_i18n_allowed_languages=nl
zope_i18n_compile_mo_files=true


[instance]
recipe = plone.recipe.zope2instance
zeo-client = false
user = admin:admin
http-address = ${conf:instance}
debug-mode = ${conf:debug}
verbose-security = ${conf:debug}
zserver-threads = 3
# XXX Check these new options:
#zodb-cache-size = \${conf:zodb-cache-size}
#zodb-cache-size-bytes = \${conf:zodb-cache-size-bytes}
# For the blob options, see also relstorage.cfg.
blob-storage = ${buildout:directory}/var/blobstorage
shared-blob = on
environment-vars =
    PTS_LANGUAGES nl
    zope_i18n_allowed_languages nl
    MINARAAD_LOG_PATH ${conf:minaraad-log-path}
    HTTP_PROXY ${env:HTTP_PROXY}
    zope_i18n_compile_mo_files true

eggs =
    ${buildout:eggs}
    Plone
    Products.PloneHotfix20131210
# collective.emaillogin4 does some patches, so best load it early.
    collective.emaillogin4
    Products.minaraad
    Products.OrderableReferenceField
    minaraad.projects
    elementtree
    Products.DataGridField
    Products.PloneFormGen
#    Products.FCKeditor
#    Products.SecureMaildropHost
    Products.SimpleAttachment
    collective.recaptcha
    jquery.pyproxy
    munin.zope
    archetypes.schemaextender
    plone.app.theming
    plone.app.themingplugins
    collective.setdefaulteditor

zcml =
    collective.recaptcha
    minaraad.projects
    jquery.pyproxy
    munin.zope

resources = ${buildout:directory}/resources
locales = ${buildout:directory}/locales
products =
#    ${maildrop:location}


[debugclient]
<= instance
# eggs += does not work here
eggs =
    ${instance:eggs}
    wildcard.fixpersistentutilities
# Avoid starting an ftp server listening on the same port as the
# standard production client.
zope-conf-additional =


[maildrop]
recipe = infrae.maildrophost
smtp_host = mail.zestsoftware.nl
smtp_port = 25
version = 1.22
supervised_daemon = 1


[munin]
# Will be used to monitor the instance.
recipe = zc.recipe.egg
eggs = munin.zope
password = secret
arguments = http_address='${conf:instance}', user='munin:${:password}'


[varnish-conf]
recipe = collective.recipe.template[genshi]:genshi
input = templates/varnish.vcl.in
output = ${buildout:parts-directory}/conf/varnish.vcl


[pcre]
recipe = hexagonit.recipe.cmmi
url = http://downloads.sourceforge.net/project/pcre/pcre/8.12/pcre-8.12.tar.gz

[lxml]
recipe = z3c.recipe.staticlxml
egg = lxml


[varnish-build]
recipe = hexagonit.recipe.cmmi
url = ${versions:varnish-url}
configure-options =
    PCRE_CFLAGS=-I${buildout:directory}/parts/pcre/include
    PCRE_LIBS="-L${buildout:directory}/parts/pcre/lib -lpcre"


[varnish]
recipe = plone.recipe.varnish
daemon = ${buildout:parts-directory}/varnish-build/sbin/varnishd
config = ${buildout:parts-directory}/conf/varnish.vcl
bind = ${conf:varnish_host}:${conf:varnish}
cache-size = ${conf:varnish-cache-size}
mode = foreground


[supervisor]
recipe = collective.recipe.supervisor
file = ${buildout:directory}/var/supervisor.sock 
http-socket = unix 
plugins = superlance
programs =
      10 instance ${buildout:bin-directory}/instance [console]
      30 varnish (exitcodes=0) ${buildout:directory}/bin/varnish [-p cli_timeout=10]
#      40 maildrop ${buildout:bin-directory}/maildrop [start] true
eventlisteners =
      memmon TICK_60 ${buildout:bin-directory}/memmon [-p instance=${conf:memmonlimit} -s "python ${buildout:directory}/scripts/sendmail.py" -m m.van.rees@zestsoftware.nl]


[crontab-start]
recipe = z3c.recipe.usercrontab
times = @reboot
command = ${buildout:directory}/bin/supervisord


[crontab-restart]
recipe = z3c.recipe.usercrontab
times = ${conf:restart-time}
command = ${buildout:directory}/bin/supervisorctl restart instance


[crontab-pack]
recipe = z3c.recipe.usercrontab
times = ${conf:pack-time}
command = ${buildout:directory}/bin/zodbpack --days=1 ${buildout:directory}/parts/conf/zodbpack.cfg 


[crontab-projects-reminder]
recipe = z3c.recipe.usercrontab
times = ${conf:projects-reminder-time}
command = ${buildout:directory}/scripts/cron_projects_reminder.py


[logrotate.conf]
recipe = zc.recipe.deployment:configuration
text =
    rotate 4
    weekly
    create
    compress
    delaycompress

    ${buildout:directory}/var/log/instance*.log ${conf:minaraad-log-path}/minaraad_email.log {
        sharedscripts
        postrotate
            /bin/kill -USR2 $(cat ${buildout:directory}/var/instance.pid)
        endscript
    }
