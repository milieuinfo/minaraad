[buildout]

parts +=
         nodeenv
         nodejs
         grunt_start

[env]
recipe = gocept.recipe.env

[nodeenv]
recipe = zc.recipe.egg
eggs =
    nodeenv

[nodejs]
recipe = plone.recipe.command
node_version = 4.4.0
npm_version = 3.8.1
theme_dir = ${buildout:directory}/src/minaraad.theme/minaraad/theme/diazo_resources
command =
    PATH="${env:PATH}:${buildout:bin-directory}"
    DEST="${buildout:parts-directory}/nodejs"
    LOCAL_NODE_MODULES_DIR=${buildout:directory}
    OLD_PWD=`pwd`
    echo
    echo "Creating node.js environment @ $DEST..."
    if [ ! -d "$DEST" ]; then
        ${buildout:bin-directory}/nodeenv --node=${:node_version} --prebuilt "$DEST"
        echo "..."
        . ${buildout:directory}/parts/nodejs/bin/activate
        echo "Updating npm to latest stable in nodeenv global"
        npm install -g npm@${:npm_version}
        cd "$OLD_PWD"
        deactivate_node
    else
        echo "Environment already exists at $DEST, skipping."
    fi
    . ${buildout:directory}/parts/nodejs/bin/activate
    echo "Installing global node modules"
    cd ${buildout:directory}
    npm -g install bower@1.7.7
    # Remove when not using grunt
    npm -g install grunt-cli@0.1.13
    echo "Installing local node modules, Grunt refuses to run otherwise..."
    cd ${:theme_dir}
    if [ -e node_modules.tar.gz ]; then
        if [ ! -d node_modules ]; then
            tar xf node_modules.tar.gz
        fi
    fi
    npm install
    npm rebuild
    if [ ! -d bower_components ]; then
        bower install
    fi
    cd "$OLD_PWD"
    deactivate_node
    echo "done."

[grunt_start]
recipe = collective.recipe.template
input = inline:
        #!/bin/bash
        source ${buildout:directory}/parts/nodejs/bin/activate
        cd ${nodejs:theme_dir}
        grunt "$@"
        deactivate_node
output = ${buildout:directory}/bin/grunt_start
mode = 755

[versions]
nodeenv = 0.13.6
gocept.recipe.env = 1.0
plone.recipe.command = 1.1
libsass = 0.8.3