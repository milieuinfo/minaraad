Notes on Minaraad Plone 4 migration
===================================

- Currently we have Plone 3.1.7.

- We should move to the latest stable release, currently Plone 4.1.2.


Some dangers to think of
------------------------

- CacheSetup. Should be uninstalled in Plone 3.  Hopefully nothing
  then breaks when starting up under Plone 4.  So far so good.

- We use collective.emaillogin.  This has been merged into Plone 4.0
  so we should not ship with the package itself.  We need to check for
  changes we made to the login machinery.

- Maybe a few fixes are needed for OrderableReferenceField (which we
  have created ourselves, to order references to contact persons),
  although 1.2-beta4 at least claims Plone 4 compatibility:

  http://pypi.python.org/pypi/Products.OrderableReferenceField/
  Have a look at the issue tracker too:
  http://plone.org/products/orderablereferencefield/issues

- E-mail sending has seen a few changes and needs to be checked.
  Maybe port our custom code to use collective.watcherlist.  No
  distinction needs to be made anymore between physical post and
  e-mail subscribers, so that may simplify things a bit and allow us
  to get rid of some code.

- Products.FCKeditor has no release that works on Plone 4.  Buildout
  works fine and the instance can start, but I get an error when
  running the Plone migration, even after uninstalling FCKeditor in
  Plone 4::

    TransformException: Invalid transform : ITransform is not
    implemented by
    Products.FCKeditor.transforms.fck_ruid_to_url.fck_ruid_to_url

  Manually removing fck_ruid_to_url from portal_transforms in the ZMI
  could fix that.

  We probably need to uninstall FCKeditor in Plone 3 (which removes
  that transform automatically).  Then either install
  collective.ckeditor or use TinyMCE.  We will need to use
  collective.setdefaulteditor too, and probably update that code a bit
  to make use of the new option in Plone 4 to just use the system
  default instead of explicitly setting everyone's preference to the
  new editor.


To do on Plone 3 through the web
--------------------------------

- Go to the portal_quickinstaller and uninstall CacheSetup.

- Uninstall emaillogin.

- Uninstall FCKeditor.

- You have to manually remove some skin layers from the Plone Default
  skin selection:

  - cache_setup

  - emaillogin

  - fckeditorplone

  - fckeditor

- You can now remove fckeditor.html from the custom skin layer.

- Remove some left-over CacheFu stuff.  On Plone 4 I currently still
  get this warning in the logs:

    WARNING OFS.Uninstalled Could not import class 'CSCachingPolicyManager' from module 'Products.CacheSetup.content.caching_policy_manager'

  TODO: figure out which item this is.

- There is a difference between the minaraad Components registry and a
  default Plone 3.1.7 registry.  This should be added in minaraad while
  still using Plone 3.1.7, in the Components tab, otherwise you get a
  ComponentLookupError on IPortalTransformsTool when upgrading to
  Plone 4 (probably also fine to do this just before doing the Plone
  migration TTW)::

    <utility
       interface="Products.PortalTransforms.interfaces.IPortalTransformsTool"
       object="portal_transforms"/>

  Add that somewhere in the utilities tag on the Components tab.

  Note that Plone 3.1.7 also has the next few lines, but those objects
  do not exist in minaraad, so let's not add them; ah, even if you try
  to add them Zope ignores them and does not actually add them::

    <utility interface="plone.app.i18n.locales.interfaces.IContentLanguages"
       object="plone_app_content_languages"/>
    <utility interface="plone.app.i18n.locales.interfaces.ICountries"
       object="plone_app_countries"/>
    <utility interface="plone.app.i18n.locales.interfaces.IMetadataLanguages"
       object="plone_app_metadata_languages"/>

- Remove the classic portlet_recent from @@manage-portlets in the portal root.

- In portal_skins there is only the Plone Default theme.  Copy this to
  a new Minaraad Theme skin selection and use that as the default.
  Otherwise the standard Plone migration creates a 'Old Plone 3 Custom
  Theme' skin selection.


To do in the buildout
---------------------

- Check which versions can be removed from versions.cfg as they are
  already pinned elsewhere.  Preferably do not remove versions from no
  longer used recipes though, as the pins are needed for uninstall
  too.

- Fix the test part.

- Test RelStorage with blobstorage.  TEST IT WELL!!!  There is some
  confusion (at least for me) between the names of the options and
  where to put them.  See:

  - http://pypi.python.org/pypi/RelStorage
  - http://pypi.python.org/pypi/plone.recipe.zope2instance

- The i18noverrides should no longer be used.  The fixes should be
  done in the code (locales directory).


To do in the code
-----------------

- The i18noverrides buildout part should no longer be used.  The fixes
  should somehow be done in the code, making sure we override
  translations properly.  Maurits probably knows how this can be done,
  but needs to look that up again. :-) See
  http://maurits.vanrees.org/weblog/archive/2010/10/i18n-plone-4#overriding-translations


Skin jobs
---------

- Maybe create a separate Minaraad Theme package.  At least we should
  have a 'Minaraad Theme' in portal_skins; this is added manually in
  Plone 3 when you follow the above instructions.  We may want to
  start over based on Sunburst.  Possibly even with plone.app.theming.
  I [maurits] have at least created a new mina_style skin layer and
  moved all css files there that used to be in the single minaraad
  skin layer.  We now add this only to our theme and not also to Plone
  Default/Classic/Sunburst.

- Update main_template.pt.  Messy.

- portlet_recent breaks; this is currently using a classic portlet; we
  should create and use a normal portlet.

- Possibly remove the "not:js_enabled" code in login_success.pt as we
  had this removed in Plone 3 as well, with the remark that apparently
  this is triggered wrongly when using the login portlet.  So check if
  something still goes wrong and in that case remove this code (or
  find a better fix).

- Move our skins/minaraad/colophon.pt changes to the viewlet in
  plone/app/layout/viewlets/colophon.pt

- Make sure the viewlet in
  plone/app/layout/viewlets/document_actions.pt is shown in the correct place.

- Check lots more customized templates by checking in the logs why we
  customized them in the first place and whether this is still needed.

- Check our own new templates.


To do on Plone 4 through the web
--------------------------------

- Run the Plone migration.

- Run the upgrade steps of Products.minaraad in portal_setup.

- Configure plone.app.caching (not much was previously cached in
  CacheSetup though, so not very critical).  I have not tried this
  yet.

- Create a "Minaraad Theme" skin layer with the following layers.
  This is now also done by an upgrade step; see
  Producst/minaraad/profiles/plone41/skins.xml and please update the
  list of canonical layers there in case this is needed.

  The theme is based on Sunburst Theme.  It still needs a few
  adjustments.  No need to define the portlets, they are included by
  default.
